/**
 * navigation.js
 *
 * Handles toggling the navigation menu for small screens and enables tab
 * support for dropdown menus.
 */
( function() {
	var container, button, menu, links, subMenus;

	container = document.getElementById( 'site-navigation' );
	if ( ! container ) {
		return;
	}

	button = container.getElementsByTagName( 'button' )[0];
	if ( 'undefined' === typeof button ) {
		return;
	}

	menu = container.getElementsByTagName( 'ul' )[0];

	// Hide menu toggle button if menu is empty and return early.
	if ( 'undefined' === typeof menu ) {
		button.style.display = 'none';
		return;
	}

	menu.setAttribute( 'aria-expanded', 'false' );
	if ( -1 === menu.className.indexOf( 'nav-menu' ) ) {
		menu.className += ' nav-menu';
	}

	button.onclick = function() {
		if ( -1 !== container.className.indexOf( 'toggled' ) ) {
			container.className = container.className.replace( ' toggled', '' );
			button.setAttribute( 'aria-expanded', 'false' );
			menu.setAttribute( 'aria-expanded', 'false' );
		} else {
			container.className += ' toggled';
			button.setAttribute( 'aria-expanded', 'true' );
			menu.setAttribute( 'aria-expanded', 'true' );
		}
	};

	// Get all the link elements within the menu.
	links    = menu.getElementsByTagName( 'a' );
	subMenus = menu.getElementsByTagName( 'ul' );

	// Set menu items with submenus to aria-haspopup="true".
	for ( var i = 0, len = subMenus.length; i < len; i++ ) {
		subMenus[i].parentNode.setAttribute( 'aria-haspopup', 'true' );
	}

	// Each time a menu link is focused or blurred, toggle focus.
	for ( i = 0, len = links.length; i < len; i++ ) {
		links[i].addEventListener( 'focus', toggleFocus, true );
		links[i].addEventListener( 'blur', toggleFocus, true );
	}

	/**
	 * Sets or removes .focus class on an element.
	 */
	function toggleFocus() {
		var self = this;

		// Move up through the ancestors of the current link until we hit .nav-menu.
		while ( -1 === self.className.indexOf( 'nav-menu' ) ) {

			// On li elements toggle the class .focus.
			if ( 'li' === self.tagName.toLowerCase() ) {
				if ( -1 !== self.className.indexOf( 'focus' ) ) {
					self.className = self.className.replace( ' focus', '' );
				} else {
					self.className += ' focus';
				}
			}

			self = self.parentElement;
		}
	}
} )();

/**
 * skip-link-focus-fix.js
 *
 * Helps with accessibility for keyboard only users.
 *
 * Learn more: https://github.com/Automattic/jr_portfolio/pull/136
 */
( function() {
	var is_webkit = navigator.userAgent.toLowerCase().indexOf( 'webkit' ) > -1,
	    is_opera  = navigator.userAgent.toLowerCase().indexOf( 'opera' )  > -1,
	    is_ie     = navigator.userAgent.toLowerCase().indexOf( 'msie' )   > -1;

	if ( ( is_webkit || is_opera || is_ie ) && document.getElementById && window.addEventListener ) {
		window.addEventListener( 'hashchange', function() {
			var id = location.hash.substring( 1 ),
				element;

			if ( ! ( /^[A-z0-9_-]+$/.test( id ) ) ) {
				return;
			}

			element = document.getElementById( id );

			if ( element ) {
				if ( ! ( /^(?:a|select|input|button|textarea)$/i.test( element.tagName ) ) ) {
					element.tabIndex = -1;
				}

				element.focus();
			}
		}, false );
	}
})();

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var testForLocalStorage = require('./modules/testForLocalStorage');

state = {
	"db" : false
};

(function($) {	

	$(document).ready(function() {

		testForLocalStorage(state);


		$('.the_item').on('click', function() {

			// Get REST URL from the DOM
			var itemId = $(this).data('api');			
			console.log(itemId);

			// Get REST URL from WordPress
			var json_url = postdata.json_url[itemId];

			console.log(json_url);

			$.ajax({
			    url: json_url,
			    dataType: 'json'
			})

			.done(function(data){

				if (state.db) {
					console.log(data.title.rendered);
				};		
										
			})

			.fail(function() {
				console.log('error');
			})

			.always(function() {
				console.log('complete!');
			});


		});

	});


	// $("document").ready(function() {
	//     var template = $("#itemTemplate").html();
	//     var result = Mustache.render(template, {
	//         "item" : "Whisper 4000 in-home heater and dog walker",
	//         "description" : "Walk your dog and heat your house at the same time? Now you can, with the Whisper 4000 Home Heating system / Dog Treadmill!",
	//         "price" : 895.99,
	//         "inStock" : true,
	//         "quantity" : 100
	//     } );
	//     $("#container").html(result);
	//  });


})(jQuery);
},{"./modules/testForLocalStorage":2}],2:[function(require,module,exports){
module.exports = function testForLocalStorage(state) {

	if (Modernizr.localstorage) {
	// window.localStorage is available!
	console.log('testForLocalStorage is available');
	state.db = true;
	} else {
	// no native support for HTML5 storage :(
	// maybe try dojox.storage or a third-party solution
	console.log('no testForLocalStorage is available!!');
	state.db = false;
	}

	return state;
	
};
},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvYXBwL2VudHJ5Iiwic3JjL2pzL2FwcC9tb2R1bGVzL3Rlc3RGb3JMb2NhbFN0b3JhZ2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgdGVzdEZvckxvY2FsU3RvcmFnZSA9IHJlcXVpcmUoJy4vbW9kdWxlcy90ZXN0Rm9yTG9jYWxTdG9yYWdlJyk7XG5cbnN0YXRlID0ge1xuXHRcImRiXCIgOiBmYWxzZVxufTtcblxuKGZ1bmN0aW9uKCQpIHtcdFxuXG5cdCQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuXG5cdFx0dGVzdEZvckxvY2FsU3RvcmFnZShzdGF0ZSk7XG5cblxuXHRcdCQoJy50aGVfaXRlbScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBHZXQgUkVTVCBVUkwgZnJvbSB0aGUgRE9NXG5cdFx0XHR2YXIgaXRlbUlkID0gJCh0aGlzKS5kYXRhKCdhcGknKTtcdFx0XHRcblx0XHRcdGNvbnNvbGUubG9nKGl0ZW1JZCk7XG5cblx0XHRcdC8vIEdldCBSRVNUIFVSTCBmcm9tIFdvcmRQcmVzc1xuXHRcdFx0dmFyIGpzb25fdXJsID0gcG9zdGRhdGEuanNvbl91cmxbaXRlbUlkXTtcblxuXHRcdFx0Y29uc29sZS5sb2coanNvbl91cmwpO1xuXG5cdFx0XHQkLmFqYXgoe1xuXHRcdFx0ICAgIHVybDoganNvbl91cmwsXG5cdFx0XHQgICAgZGF0YVR5cGU6ICdqc29uJ1xuXHRcdFx0fSlcblxuXHRcdFx0LmRvbmUoZnVuY3Rpb24oZGF0YSl7XG5cblx0XHRcdFx0aWYgKHN0YXRlLmRiKSB7XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZGF0YS50aXRsZS5yZW5kZXJlZCk7XG5cdFx0XHRcdH07XHRcdFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcblx0XHRcdH0pXG5cblx0XHRcdC5mYWlsKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRjb25zb2xlLmxvZygnZXJyb3InKTtcblx0XHRcdH0pXG5cblx0XHRcdC5hbHdheXMoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdjb21wbGV0ZSEnKTtcblx0XHRcdH0pO1xuXG5cblx0XHR9KTtcblxuXHR9KTtcblxuXG5cdC8vICQoXCJkb2N1bWVudFwiKS5yZWFkeShmdW5jdGlvbigpIHtcblx0Ly8gICAgIHZhciB0ZW1wbGF0ZSA9ICQoXCIjaXRlbVRlbXBsYXRlXCIpLmh0bWwoKTtcblx0Ly8gICAgIHZhciByZXN1bHQgPSBNdXN0YWNoZS5yZW5kZXIodGVtcGxhdGUsIHtcblx0Ly8gICAgICAgICBcIml0ZW1cIiA6IFwiV2hpc3BlciA0MDAwIGluLWhvbWUgaGVhdGVyIGFuZCBkb2cgd2Fsa2VyXCIsXG5cdC8vICAgICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJXYWxrIHlvdXIgZG9nIGFuZCBoZWF0IHlvdXIgaG91c2UgYXQgdGhlIHNhbWUgdGltZT8gTm93IHlvdSBjYW4sIHdpdGggdGhlIFdoaXNwZXIgNDAwMCBIb21lIEhlYXRpbmcgc3lzdGVtIC8gRG9nIFRyZWFkbWlsbCFcIixcblx0Ly8gICAgICAgICBcInByaWNlXCIgOiA4OTUuOTksXG5cdC8vICAgICAgICAgXCJpblN0b2NrXCIgOiB0cnVlLFxuXHQvLyAgICAgICAgIFwicXVhbnRpdHlcIiA6IDEwMFxuXHQvLyAgICAgfSApO1xuXHQvLyAgICAgJChcIiNjb250YWluZXJcIikuaHRtbChyZXN1bHQpO1xuXHQvLyAgfSk7XG5cblxufSkoalF1ZXJ5KTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRlc3RGb3JMb2NhbFN0b3JhZ2Uoc3RhdGUpIHtcblxuXHRpZiAoTW9kZXJuaXpyLmxvY2Fsc3RvcmFnZSkge1xuXHQvLyB3aW5kb3cubG9jYWxTdG9yYWdlIGlzIGF2YWlsYWJsZSFcblx0Y29uc29sZS5sb2coJ3Rlc3RGb3JMb2NhbFN0b3JhZ2UgaXMgYXZhaWxhYmxlJyk7XG5cdHN0YXRlLmRiID0gdHJ1ZTtcblx0fSBlbHNlIHtcblx0Ly8gbm8gbmF0aXZlIHN1cHBvcnQgZm9yIEhUTUw1IHN0b3JhZ2UgOihcblx0Ly8gbWF5YmUgdHJ5IGRvam94LnN0b3JhZ2Ugb3IgYSB0aGlyZC1wYXJ0eSBzb2x1dGlvblxuXHRjb25zb2xlLmxvZygnbm8gdGVzdEZvckxvY2FsU3RvcmFnZSBpcyBhdmFpbGFibGUhIScpO1xuXHRzdGF0ZS5kYiA9IGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHN0YXRlO1xuXHRcbn07Il19
