.group:after {
  visibility: hidden;
  display: block;
  font-size: 0;
  content: " ";
  clear: both;
  height: 0; }

.group {
  display: inline-block;
  clear: both; }

/* start commented backslash hack \*/
* html .group {
  height: 1%; }

.group {
  display: block; }

/* close commented backslash hack */
/* clear floats */
.clear {
  clear: both; }

.cf {
  zoom: 1; }
  .cf:before, .cf:after {
    content: " ";
    display: table; }
  .cf:after {
    clear: both; }

.hidden {
  display: none !important; }

*, *:before, *:after {
  box-sizing: border-box; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section,
summary {
  display: block;
  padding: 0;
  margin: 0; }

textarea {
  overflow: auto; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body, table, input, textarea, select {
  font-family: arial, helvetica, "free sans", sans-serif;
  font-size: 15px;
  font-weight: 400;
  font-style: normal;
  padding: 0;
  margin: 0;
  color: #1a1a1a;
  background-color: #E8E8E8; }

h1, h2, h3 {
  font-weight: 700;
  font-style: normal;
  line-height: 1.1;
  margin: 1em 0 0.2em 0; }

h1 {
  font-size: 2rem; }

h2 {
  font-size: 1.6rem;
  line-height: 2rem; }

h3 {
  font-size: 1.4rem;
  line-height: 2rem; }

a:link, a:visited {
  text-decoration: none;
  color: #567; }

a:hover, a:focus, a:active {
  text-decoration: underline;
  color: #8899aa; }

.wf-active body, .wf-active table, .wf-active input, .wf-active textarea, .wf-active select {
  font-family: "proxima-nova", helvetica, arial, "free sans", sans-serif;
  font-size: 17px; }

.wf-active h1, .wf-active h2, .wf-active h3, .wf-active legend, .wf-active button, .wf-active a.button {
  font-family: "proxima-nova", helvetica, arial, "free sans", sans-serif; }

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

img {
  max-width: 100%; }

.no-transitions,
.no-transitions * {
  transition: none !important; }

html.portfolio, body.portfolio {
  height: 100%;
  overflow: hidden; }

body.portfolio {
  overflow: hidden; }

.page-wrap {
  width: 100%; }

.wrapper {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem; }

@media (min-width: 50rem) {
  .wrapper {
    padding: 0 2rem; } }

@media (min-width: 75rem) {
  .wrapper {
    margin: 0 auto;
    padding: 0; } }

[data-page] {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-overflow-scrolling: touch;
  overflow-x: hidden;
  visibility: hidden;
  z-index: 0;
  padding: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  display: none;
  background-color: #E8E8E8; }
  [data-page].page-active {
    display: block;
    visibility: visible;
    z-index: 10; }
  [data-page].page-animating {
    overflow: hidden;
    z-index: 10;
    position: absolute;
    overflow-y: scroll;
    -ms-overflow-style: -ms-autohiding-scrollbar; }

@media only screen and (min-width: 50rem) {
  [data-page] {
    padding: 0; } }

.section-wrap {
  position: relative;
  z-index: 1;
  background-color: #E8E8E8; }

@media only screen and (min-width: 35rem) {
  .section-wrap::before {
    top: -120px;
    left: 0px;
    width: 100%;
    height: 120px;
    position: absolute;
    display: block;
    content: "";
    pointer-events: none;
    background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(232, 232, 232, 0)), color-stop(0.6, #e8e8e8)); } }

.section {
  margin-bottom: 5rem; }

p {
  margin-bottom: 1.5rem; }

/* transition to single item */
.page.scale-down {
  -webkit-animation: scaleDown 900ms forwards ease-out;
          animation: scaleDown 900ms forwards ease-out; }

@-webkit-keyframes scaleDown {
  50% {
    opacity: .5; }
  100% {
    opacity: 0;
    -webkit-transform: scale(0.5);
            transform: scale(0.5); } }

@keyframes scaleDown {
  50% {
    opacity: .5; }
  100% {
    opacity: 0;
    -webkit-transform: scale(0.5);
            transform: scale(0.5); } }

.page.slide-in-from-right {
  -webkit-animation: slideInFromRight 1100ms forwards ease-in-out;
          animation: slideInFromRight 1100ms forwards ease-in-out; }

@-webkit-keyframes slideInFromRight {
  0% {
    -webkit-transform: translateX(200%);
            transform: translateX(200%); }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0); } }

@keyframes slideInFromRight {
  0% {
    -webkit-transform: translateX(200%);
            transform: translateX(200%); }
  100% {
    -webkit-transform: translateX(0);
            transform: translateX(0); } }

/* transition back to menu */
.page.slide-to-right {
  -webkit-animation: slideToRight 500ms forwards ease-in-out;
          animation: slideToRight 500ms forwards ease-in-out; }

@-webkit-keyframes slideToRight {
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

@keyframes slideToRight {
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

.page.slide-from-left {
  -webkit-animation: slideFromLeft 500ms forwards ease-in-out;
          animation: slideFromLeft 500ms forwards ease-in-out; }

@-webkit-keyframes slideFromLeft {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@keyframes slideFromLeft {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@-webkit-keyframes slideToLeft {
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@keyframes slideToLeft {
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

.page-on-top, .page.slide-in-from-right.page-animating {
  z-index: 999; }

.animation-delay-100 {
  -webkit-animation-delay: .100s;
          animation-delay: .100s; }

.animation-delay-200 {
  -webkit-animation-delay: .200s;
          animation-delay: .200s; }

.animation-delay-300 {
  -webkit-animation-delay: .300s;
          animation-delay: .300s; }

.animation-delay-500 {
  -webkit-animation-delay: .500s;
          animation-delay: .500s; }

.animation-delay-700 {
  -webkit-animation-delay: .700s;
          animation-delay: .700s; }

.animation-delay-1000 {
  -webkit-animation-delay: 1000s;
          animation-delay: 1000s; }

.header {
  position: relative;
  z-index: 1;
  padding-top: 4rem; }

.header-block {
  height: 0;
  display: none; }

@media (min-width: 35rem) {
  .header {
    width: 99%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1; }
  .header-block {
    display: block;
    width: 100%;
    height: 410px; } }

@media (min-width: 50rem) {
  .header-block {
    height: 400px; } }

.site-title {
  text-align: center;
  letter-spacing: .6rem;
  line-height: 40px;
  margin: 0 auto 5rem auto;
  opacity: 0;
  font-weight: 100;
  font-size: 2.3rem; }

.wf-active .site-title {
  opacity: 1; }

.site-intro {
  width: 100%;
  max-width: 800px;
  text-align: center;
  margin: 0 auto; }

.site-footer {
  background-color: #1a1a1a;
  position: relative;
  margin-top: 1rem;
  padding: 0; }
  .site-footer:before {
    content: " ";
    display: block;
    position: relative;
    width: 100%;
    top: -1rem;
    height: 1rem;
    background: linear-gradient(135deg, transparent 75%, #1a1a1a 76%) 0 50%, linear-gradient(-135deg, transparent 75%, #1a1a1a 76%) 0 50%;
    background-repeat: repeat-x;
    background-size: 1rem 1rem, 1rem 1rem; }

.site-info {
  padding: 2rem 0;
  color: #fafafa;
  text-align: center;
  padding-bottom: 6rem; }
  .site-info h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #E8E8E8; }
  .site-info a {
    color: #E8E8E8; }

.social-list {
  margin-bottom: 1rem; }
  .social-list li {
    list-style: none;
    display: inline-block; }
    .social-list li a {
      display: block;
      text-indent: -9999999px;
      width: 60px;
      height: 60px;
      background: url(../../img/svg-logos/social-sprite.png) 0 0 no-repeat #fff;
      border-radius: 50%;
      transition: all 400ms ease; }
      .social-list li a.linkedin {
        background-position: -10px -15px; }
      .social-list li a.github {
        background-position: -68px -13px; }
      .social-list li a:hover.linkedin {
        background-position: -10px -77px;
        background-color: #1a1a1a; }
      .social-list li a:hover.github {
        background-position: -68px -77px;
        background-color: #1a1a1a; }
    .social-list li:nth-child(1) {
      margin-right: 20px; }

.email-link {
  font-size: 1.2rem; }

.intro {
  position: relative; }

.intro-item p, .intro-item h2, .intro-item-inner p, .intro-item-inner h2 {
  margin: 0;
  padding: 0;
  color: #fafafa; }

.intro-item h2, .intro-item-inner h2 {
  margin-bottom: 1em; }

.intro-item {
  padding: 0;
  width: 100%; }

@media (min-width: 50rem) {
  .intro-item {
    float: left;
    clear: none;
    margin-right: 0;
    padding: 0;
    height: 690px;
    overflow: hidden; }
    .intro-item div:first-child {
      padding: 4rem;
      height: 345px; }
    .intro-item:last-child {
      margin-right: 0; }
    .intro-item:nth-child(1) {
      width: 66%; }
    .intro-item:nth-child(2) {
      width: 34%; } }

.intro-item-inner {
  padding: 4rem; }

@media (min-width: 50rem) {
  .intro-item-inner-wrapper {
    position: absolute;
    width: 66%;
    bottom: 0;
    left: 2rem;
    height: 345px; }
  .intro-item-inner {
    padding: 0;
    float: left;
    height: 100%; }
    .intro-item-inner:nth-child(1) {
      width: 66%; }
    .intro-item-inner:nth-child(2) {
      width: 34%; } }

/* inVeiw animations */
@media only screen and (min-width: 50rem) and (max-width: 1100px) {
  .intro-item {
    height: 800px; }
    .intro-item div:first-child {
      height: 400px; }
  .intro-item-inner-wrapper {
    height: 400px; } }

@media (min-width: 75rem) {
  .intro-item-inner-wrapper {
    left: 1px; } }

.default-spacing {
  padding: 4rem; }

.web {
  background-color: #006876;
  padding: 4rem; }

.wp-dev {
  background: url("../../img/svg-logos/Wordpress_Logo.svg") no-repeat #FFB0C3;
  background-position: 0 0;
  background-size: 100%; }
  .wp-dev h2, .wp-dev p {
    color: #1a1a1a; }

.design-temp {
  background: url("../../img/svg-logos/Sass_Logo_Color.svg") bottom right no-repeat #C35500;
  background-size: 100%; }

.space {
  background: url("../../img/svg-logos/JS.svg") bottom right no-repeat #00A1B6;
  background-size: 50%; }

.icon-spinner8 {
  width: 50px;
  height: 50px;
  z-index: 1;
  -webkit-animation-name: spin;
          animation-name: spin;
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear; }

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

.back-to-menu {
  display: block;
  width: 40px;
  height: 40px;
  background-color: #fff;
  position: fixed;
  z-index: 13;
  top: 10px;
  left: 10px;
  transition: all 400ms ease-in-out;
  opacity: 0;
  -webkit-transform: translateX(-100px);
          transform: translateX(-100px); }
  .back-to-menu.on {
    opacity: 1;
    -webkit-transform: translateX(0px);
            transform: translateX(0px); }
  .back-to-menu.off {
    opacity: 0;
    display: none; }
  .back-to-menu:hover {
    cursor: pointer;
    background-color: #1a1a1a; }
    .back-to-menu:hover .icon-chevron-thin-left {
      color: #fff; }

.single .back-to-menu {
  opacity: 1;
  -webkit-transform: translateX(0px);
          transform: translateX(0px); }

.icon-chevron-thin-left {
  width: 20px;
  height: 20px;
  position: relative;
  top: 10px;
  left: 10px; }

@media (min-width: 50rem) {
  .back-to-menu {
    width: 60px;
    height: 60px;
    top: 40px;
    left: 40px; }
  .icon-chevron-thin-left {
    width: 30px;
    height: 30px;
    position: relative;
    top: 15px;
    left: 15px; } }

#js_loading {
  position: absolute;
  z-index: 11;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  transition: opacity .3s ease-in;
  background: rgba(0, 0, 0, 0.5);
  height: 100%; }

.spinner {
  width: 50px;
  height: 50px;
  border-radius: 100%;
  margin: auto;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto; }

#js_loading .spinner {
  color: #f00;
  -webkit-animation: color-bubble 2s linear 0s infinite;
          animation: color-bubble 2s linear 0s infinite; }
  #js_loading .spinner:after, #js_loading .spinner:before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    border-radius: 100%;
    box-shadow: 0 0 0 3px;
    -webkit-animation: spinner-bubble 1.3s linear 0s infinite;
            animation: spinner-bubble 1.3s linear 0s infinite;
    margin: auto;
    width: 10px;
    height: 10px;
    opacity: 0; }
  #js_loading .spinner:before {
    -webkit-animation: spinner-bubble 1.3s linear 2s infinite;
            animation: spinner-bubble 1.3s linear 2s infinite; }

@-webkit-keyframes spinner-bubble {
  from {
    width: 10px;
    height: 10px;
    opacity: .8; }
  to {
    width: 50px;
    height: 50px;
    opacity: 0; } }

@keyframes spinner-bubble {
  from {
    width: 10px;
    height: 10px;
    opacity: .8; }
  to {
    width: 50px;
    height: 50px;
    opacity: 0; } }

@-webkit-keyframes color-bubble {
  0% {
    color: #ffffff; }
  33% {
    color: #ffffff; }
  66% {
    color: #ffffff; }
  100% {
    color: #ffffff; } }

@keyframes color-bubble {
  0% {
    color: #ffffff; }
  33% {
    color: #ffffff; }
  66% {
    color: #ffffff; }
  100% {
    color: #ffffff; } }

.letter {
  opacity: 0; }

.wf-active .letter {
  opacity: 1; }

#testing {
  width: 100%;
  height: 300px;
  background-color: red;
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
  opacity: 0;
  transition: all 1s ease; }
  #testing.in-view {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1; }

.single-item {
  overflow: auto;
  background-color: #E8E8E8; }

.single-wrapper {
  *zoom: 1;
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem; }

.single-wrapper:before {
  content: '';
  display: table; }

.single-wrapper:after {
  content: '';
  display: table;
  clear: both; }

@media (min-width: 50rem) {
  .single-wrapper {
    padding: 0 2rem; } }

@media (min-width: 75rem) {
  .single-wrapper {
    margin: 0 auto;
    padding: 0; } }

.single-header-block {
  height: 320px; }

.single-header {
  width: 90%;
  max-width: 700px;
  margin: 0 auto;
  height: 320px;
  background-repeat: no-repeat;
  background-position: center center; }

@media (min-width: 500px) {
  .single-header, .single-header-block {
    height: 400px; } }

@media (min-width: 600px) {
  .single-header, .single-header-block {
    height: 500px; } }

@media (min-width: 700px) {
  .single-header, .single-header-block {
    width: 100%;
    height: 600px; } }

/* single.php */
.single-post .single-header {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0; }

.center-wrap {
  position: relative;
  width: 100%;
  height: 100%; }

.center-wrap > * {
  position: absolute;
  top: 50%;
  right: auto;
  bottom: auto;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }
  .center-wrap img {
    display: block;
    max-width: 90%;
    position: relative;
    z-index: 2; }

.single-intro {
  text-align: left;
  width: 100%; }

@media (min-width: 50rem) {
  .single-intro {
    text-align: center; } }

.single-row {
  *zoom: 1;
  position: relative; }

.single-row:before {
  content: '';
  display: table; }

.single-row:after {
  content: '';
  display: table;
  clear: both; }

.single-col {
  margin-bottom: 1rem; }
  .single-col img {
    display: block;
    width: 100%; }
  .single-col.mobile img {
    max-width: 300px;
    margin: 0 auto; }

.boc .single-col.mobile img {
  max-width: 100%; }

@media (min-width: 50rem) {
  .single-intro {
    width: 50%; }
  .single-col {
    width: calc(99.99% * 1/2 - (2rem - 2rem * 1/2)); }
  .single-col:nth-child(n) {
    float: left;
    margin-right: 2rem;
    clear: none; }
  .single-col:last-child {
    margin-right: 0; }
  .single-col:nth-child(2n) {
    margin-right: 0; }
  .single-col:nth-child(2n + 1) {
    clear: left; } }

.single-hr {
  clear: both;
  margin: 4rem auto;
  width: 50%;
  height: 2px;
  border: 0;
  background-color: rgba(101, 101, 95, 0.25); }

.item-link a {
  display: block;
  padding: 10px 20px;
  margin: 0 auto 4rem auto;
  border: 1px solid #1a1a1a;
  text-transform: uppercase;
  color: #1a1a1a;
  width: 160px; }
.work_menu {
  *zoom: 1; }
.work_menu:before {
  content: '';
  display: table; }
.work_menu:after {
  content: '';
  display: table;
  clear: both; }

@media (min-width: 35rem) {
  .work_menu_item {
    width: calc(99.99% * 1/2 - (2rem - 2rem * 1/2)); }
  .work_menu_item:nth-child(n) {
    float: left;
    margin-right: 2rem;
    clear: none; }
  .work_menu_item:last-child {
    margin-right: 0; }
  .work_menu_item:nth-child(2n) {
    margin-right: 0; }
  .work_menu_item:nth-child(2n + 1) {
    clear: left; } }

@media (min-width: 75rem) {
  .work_menu_item {
    width: calc(99.99% * 1/3 - (2rem - 2rem * 1/3)); }
  .work_menu_item:nth-child(n) {
    float: left;
    margin-right: 2rem;
    clear: none; }
  .work_menu_item:last-child {
    margin-right: 0; }
  .work_menu_item:nth-child(3n) {
    margin-right: 0; }
  .work_menu_item:nth-child(3n + 1) {
    clear: left; } }

.work_menu_link {
  margin-bottom: 2rem;
  padding: 0;
  text-decoration: none;
  display: block;
  position: relative;
  overflow: hidden; }

/* captions */
.caption-wrap {
  position: absolute;
  width: 100%;
  padding: 1rem;
  transition: 300ms;
  background-color: rgba(0, 0, 0, 0.8);
  top: 0;
  left: 0;
  height: 100%;
  opacity: 0; }
  .caption-wrap h2 {
    font-size: 1.5rem; }
  .caption-wrap h2, .caption-wrap p {
    margin-bottom: .5rem; }

@media (min-width: 35rem) {
  .caption-wrap h2 {
    font-size: 2.5vmin; } }

.work_menu_link {
  border: none;
  outline: none; }
  .work_menu_link img {
    display: block;
    border: none;
    outline: none;
    transition: 300ms; }
  .work_menu_link:hover .caption-wrap, .work_menu_link:active .caption-wrap, .work_menu_link.active .caption-wrap {
    opacity: 1; }

.slide-in-left {
  color: #fbfbfb;
  -webkit-animation-duration: 300ms;
          animation-duration: 300ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }
  .slide-in-left:nth-child(1) {
    -webkit-animation-delay: 0ms;
            animation-delay: 0ms; }
  .slide-in-left:nth-child(2) {
    -webkit-animation-delay: 100ms;
            animation-delay: 100ms; }

.work_menu_link:hover .slide-in-left {
  -webkit-animation-name: bounceInLeft;
          animation-name: bounceInLeft; }

@-webkit-keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  60% {
    -webkit-transform: translate3d(3px, 0, 0);
            transform: translate3d(3px, 0, 0); }
  75% {
    opacity: 1;
    -webkit-transform: translate3d(2px, 0, 0);
            transform: translate3d(2px, 0, 0); }
  90% {
    -webkit-transform: translate3d(1px, 0, 0);
            transform: translate3d(1px, 0, 0); }
  to {
    -webkit-transform: none;
            transform: none; } }

@keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  60% {
    -webkit-transform: translate3d(3px, 0, 0);
            transform: translate3d(3px, 0, 0); }
  75% {
    opacity: 1;
    -webkit-transform: translate3d(2px, 0, 0);
            transform: translate3d(2px, 0, 0); }
  90% {
    -webkit-transform: translate3d(1px, 0, 0);
            transform: translate3d(1px, 0, 0); }
  to {
    -webkit-transform: none;
            transform: none; } }

/*# sourceMappingURL=data:application/json;base64, */
